---
import { getCollection } from 'astro:content'
import BlogLayout from 'src/layouts/blog/blog-layout.astro'
import FeaturedPost from '@components/blog/featured-post.astro'
import PostGrid from '@components/blog/post-grid.astro'
import SearchBar from '@components/blog/search-bar.astro'
import CategoryFilter from '@components/blog/category-filter.astro'

// Obtener y ordenar los posts
const allPosts = await getCollection('blog')
const sortedPosts = allPosts.sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
)

// Obtener el post más reciente para destacarlo
const featuredPost = sortedPosts[0]
const remainingPosts = sortedPosts.slice(1)

// Extraer categorías únicas para los filtros
const categories = [...new Set(allPosts.map((post) => post.data.category))]
---

<BlogLayout title='Blog | Artículos y Recursos'>
  <div
    class='from-indigo-50 dark:from-gray-900 dark:to-gray-800 bg-gradient-to-b to-white'
  >
    <main class='container mx-auto px-4 py-12'>
      <header class='mb-16 text-center'>
        <h1
          class='text-transparent from-indigo-600 dark:from-indigo-400 mb-4 bg-gradient-to-r to-purple-600 bg-clip-text text-5xl font-extrabold tracking-tight dark:to-purple-400'
        >
          Blog
        </h1>
        <p class='text-gray-600 dark:text-gray-300 mx-auto max-w-2xl text-lg'>
          Descubre las últimas tendencias, consejos y tutoriales sobre
          desarrollo web, diseño y tecnología.
        </p>
      </header>

      <div
        class='mb-12 flex flex-col items-start justify-between gap-6 md:flex-row'
      >
        <SearchBar client:load />
        <CategoryFilter categories={categories} client:load />
      </div>

      {
        featuredPost && (
          <section class='mb-16'>
            <h2 class='text-gray-800 dark:text-gray-100 mb-6 text-2xl font-bold'>
              Artículo Destacado
            </h2>
            <FeaturedPost post={featuredPost} />
          </section>
        )
      }

      <section>
        <div class='mb-6 flex items-center justify-between'>
          <h2 class='text-gray-800 dark:text-gray-100 text-2xl font-bold'>
            Publicaciones Recientes
          </h2>
          <div class='flex gap-2 text-sm'>
            <button
              id='grid-view'
              class='bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-200 rounded-lg p-2'
              aria-label='Vista de cuadrícula'
            >
              <svg
                xmlns='http://www.w3.org/2000/svg'
                width='18'
                height='18'
                viewBox='0 0 24 24'
                fill='none'
                stroke='currentColor'
                stroke-width='2'
                stroke-linecap='round'
                stroke-linejoin='round'
              >
                <rect x='3' y='3' width='7' height='7'></rect>
                <rect x='14' y='3' width='7' height='7'></rect>
                <rect x='3' y='14' width='7' height='7'></rect>
                <rect x='14' y='14' width='7' height='7'></rect>
              </svg>
            </button>
            <button
              id='list-view'
              class='hover:bg-gray-200 dark:hover:bg-gray-700 text-gray-500 dark:text-gray-400 rounded-lg p-2'
              aria-label='Vista de lista'
            >
              <svg
                xmlns='http://www.w3.org/2000/svg'
                width='18'
                height='18'
                viewBox='0 0 24 24'
                fill='none'
                stroke='currentColor'
                stroke-width='2'
                stroke-linecap='round'
                stroke-linejoin='round'
              >
                <line x1='3' y1='6' x2='21' y2='6'></line>
                <line x1='3' y1='12' x2='21' y2='12'></line>
                <line x1='3' y1='18' x2='21' y2='18'></line>
              </svg>
            </button>
          </div>
        </div>

        <PostGrid posts={remainingPosts} />

        <!-- <div class='mt-12 flex justify-center'>
          <button
            id='load-more'
            class='bg-indigo-600 hover:bg-indigo-700 dark:bg-indigo-700 dark:hover:bg-indigo-800 rounded-lg px-6 py-3 font-medium text-white shadow-md transition duration-200 hover:shadow-lg'
          >
            Cargar más artículos
          </button>
        </div> -->
      </section>
    </main>
  </div>
</BlogLayout>

<script>
  // Script para manejar la funcionalidad de los botones de vista
  const gridViewBtn = document.getElementById('grid-view')
  const listViewBtn = document.getElementById('list-view')
  const postGrid = document.querySelector('.post-grid')

  gridViewBtn?.addEventListener('click', () => {
    postGrid?.classList.remove('list-view')
    postGrid?.classList.add('grid-view')
    gridViewBtn.classList.add(
      'bg-gray-200',
      'dark:bg-gray-700',
      'text-gray-700',
      'dark:text-gray-200'
    )
    listViewBtn?.classList.remove(
      'bg-gray-200',
      'dark:bg-gray-700',
      'text-gray-700',
      'dark:text-gray-200'
    )
    listViewBtn?.classList.add('text-gray-500', 'dark:text-gray-400')
  })

  listViewBtn?.addEventListener('click', () => {
    postGrid?.classList.remove('grid-view')
    postGrid?.classList.add('list-view')
    listViewBtn.classList.add(
      'bg-gray-200',
      'dark:bg-gray-700',
      'text-gray-700',
      'dark:text-gray-200'
    )
    gridViewBtn?.classList.remove(
      'bg-gray-200',
      'dark:bg-gray-700',
      'text-gray-700',
      'dark:text-gray-200'
    )
    gridViewBtn?.classList.add('text-gray-500', 'dark:text-gray-400')
  })

  // Función para simular la carga de más artículos (en producción debería conectarse a una API o paginación)
  const loadMoreBtn = document.getElementById('load-more')
  loadMoreBtn?.addEventListener('click', () => {
    // Aquí implementarías la carga real de más posts
    alert('En un sitio real, aquí cargaríamos más artículos!')
  })
</script>
