---
import { getEntry } from 'astro:content'
import Layout from 'src/layouts/layout.astro'
import { Image } from 'astro:assets'
import { formatDate } from 'src/utils/date-formatter'

// En modo SSR, obtenemos el slug desde los params
const { slug } = Astro.params

// Necesitamos validar que el slug existe
if (!slug) {
  return Astro.redirect('/blog')
}

// Intentamos obtener la entrada directamente por su slug
const entry = await getEntry('blog', slug)

// Si no se encuentra la entrada, redirigimos al blog
if (!entry) {
  console.error(`No se encontr√≥ ninguna entrada con el slug: ${slug}`)
  return Astro.redirect('/blog')
}

// Renderizamos el contenido
const { Content } = await entry.render()
const { title, description, pubDate, heroImage, tags } = entry.data
---

<Layout title={title} description={description}>
  <a
    href='/blog'
    class='text-indigo-600 dark:text-indigo-400 hover:text-indigo-800 dark:hover:text-indigo-300 mb-4 flex items-center transition-colors'
  >
    <svg
      xmlns='http://www.w3.org/2000/svg'
      class='mr-2 h-5 w-5'
      viewBox='0 0 20 20'
      fill='currentColor'
    >
      <path
        fill-rule='evenodd'
        d='M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z'
        clip-rule='evenodd'></path>
    </svg>
    Back to Blog
  </a>
  <article>
    <!-- Hero Section -->
    <div class='mb-12 space-y-6'>
      <div class='flex flex-wrap gap-6'>
        {
          tags?.map((tag) => (
            <span class='bg-indigo-100 text-indigo-800 dark:bg-indigo-900 dark:text-indigo-200 rounded-full text-sm'>
              #{tag}
            </span>
          ))
        }
      </div>

      <h1 class='text-gray-900 text-4xl font-bold dark:text-white sm:text-5xl'>
        {title}
      </h1>

      <p class='text-gray-600 dark:text-gray-300 text-xl'>
        {description}
      </p>

      <div class='flex items-center'>
        <time
          datetime={pubDate.toISOString()}
          class='text-gray-500 dark:text-gray-400'
        >
          {formatDate(pubDate)}
        </time>
      </div>
    </div>

    {
      heroImage && (
        <div class='mb-12 overflow-hidden rounded-xl'>
          <Image
            src={heroImage}
            alt={title}
            width={1200}
            height={630}
            class='h-auto max-h-96 w-full object-cover'
          />
        </div>
      )
    }

    <!-- Content -->
    <div class='prose prose-lg dark:prose-invert max-w-none'>
      <Content />
    </div>
  </article>
</Layout>

<!-- <style>
  /* Custom styling for code blocks */
  :global(.prose pre) {
    @apply bg-gray-900 dark:bg-gray-800 overflow-x-auto rounded-xl p-6 shadow-lg;
  }

  :global(.prose code) {
    @apply font-mono text-sm;
  }

  :global(.prose h2) {
    @apply text-gray-900 mb-6 mt-12 text-3xl font-bold dark:text-white;
  }

  :global(.prose h3) {
    @apply text-gray-900 mb-4 mt-10 text-2xl font-semibold dark:text-white;
  }

  /* Custom styling for horizontal rules */
  :global(.prose hr) {
    @apply border-gray-200 dark:border-gray-800 my-12;
  }

  /* Better paragraph spacing */
  :global(.prose p) {
    @apply text-gray-700 dark:text-gray-300 my-6 leading-relaxed;
  }

  /* Improved list styling */
  :global(.prose ul) {
    @apply my-6 list-disc space-y-2 pl-6;
  }

  :global(.prose ol) {
    @apply my-6 list-decimal space-y-2 pl-6;
  }
</style> -->
